name: Security CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1. SAST - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit SAST
        run: bandit -r . -f json -o bandit-results.json || true

  # 2. Dependency Scanning  
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  # 3. Secret Detection
  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect secrets
        uses: gitleaks/gitleaks-action@v2

  # 4. Build Docker Image
  build:
    runs-on: ubuntu-latest
    needs: [sast, dependency-scan, secret-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t django-allauth:latest .
          echo "‚úÖ Docker image built successfully"

  # 5. Security Gate
  security-gate:
    runs-on: ubuntu-latest
    needs: [sast, dependency-scan, secret-scan, build]
    steps:
      - name: Security Check
        run: |
          echo "üîí Security Pipeline Completed"
          echo "‚úÖ SAST: ${{ needs.sast.result }}"
          echo "‚úÖ Dependency Scan: ${{ needs.dependency-scan.result }}" 
          echo "‚úÖ Secret Scan: ${{ needs.secret-scan.result }}"
          echo "‚úÖ Build: ${{ needs.build.result }}"
          echo "üéâ All security checks passed!"
