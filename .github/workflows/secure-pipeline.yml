name: Security CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  # SAST - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install bandit

      - name: Run Bandit SAST
        run: |
          echo "Running Bandit security scan..."
          bandit -r . -f txt -o bandit-results.txt || echo "Bandit scan completed"

  # Dependency Scanning
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for requirements.txt
        run: |
          echo "Checking project structure..."
          ls -la
          if [ -f "requirements.txt" ]; then
            echo "‚úÖ requirements.txt found"
            cat requirements.txt
          else
            echo "‚ùå requirements.txt not found"
          fi

  # Secret Detection
  secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Simple secret check
        run: |
          echo "Checking for hardcoded secrets..."
          # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —è–≤–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
          if grep -r "password.*=" . --include="*.py" || grep -r "secret.*=" . --include="*.py"; then
            echo "‚ö†Ô∏è  Potential secrets found"
          else
            echo "‚úÖ No obvious secrets found"
          fi

  # Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Dockerfile
        run: |
          if [ -f "Dockerfile" ]; then
            echo "‚úÖ Dockerfile found"
            docker build -t django-allauth:latest .
            echo "‚úÖ Docker image built successfully"
          else
            echo "‚ùå Dockerfile not found"
            echo "Available files:"
            ls -la
          fi

  # Security Report
  report:
    runs-on: ubuntu-latest
    needs: [sast, dependency-scan, secret-scan, build]
    steps:
      - name: Generate Security Report
        run: |
          echo "üîí SECURITY PIPELINE REPORT"
          echo "==========================="
          echo "SAST Status: ${{ needs.sast.result }}"
          echo "Dependency Scan Status: ${{ needs.dependency-scan.result }}"
          echo "Secret Detection Status: ${{ needs.secret-scan.result }}"
          echo "Build Status: ${{ needs.build.result }}"
          echo ""
          echo "üìä Next steps:"
          echo "1. Add requirements.txt for dependency scanning"
          echo "2. Ensure Dockerfile is in root directory"
          echo "3. Configure proper secret detection"
